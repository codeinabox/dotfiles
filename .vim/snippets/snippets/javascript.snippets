snippet ctm "Cuts the mustard - if ('querySelector' in document ...) { ... }"
	if ('querySelector' in document && 'addEventListener' in window && 'localStorage' in window) {
		// Browser cuts the mustard and hence is modern
		${0:${VISUAL}}
	}
snippet domloaded "document.addEventListener('DOMContentLoaded', function() { ... }"
	document.addEventListener('DOMContentLoaded', function(event) {
		${0:${VISUAL}}
	});
snippet tbind "this.func = this.func.bind(this)"
	this.${1:func} = this.$1.bind(this);
snippet pra "Promise.all([p1, p2]).then((values) => { .. })"
	Promise.all([${1}]).then((${2:values}) => {
		${0:${VISUAL}}
	});
snippet env "process.env.XYZ"
	process.env.${1:XYZ}
snippet clog "console.log(xyz)"
	console.log(${1:XYZ})
snippet dyest "new Date() for yesterday"
	const ${1:yesterday} = new Date()
	$1.setDate($1.getDate() - 1)
snippet reactfc "React functional component"
	import * as React from "react"

	export const ${1:Name} = (props) => {
		return ${0:${VISUAL}}
	}
snippet reacths "React hook state"
	const [${1:count}, set$1] = React.useState(${3:0})
snippet awpra "const [..] = await Promise.all([..])"
	const [${1:res}] = await Promise.all([
		${0:${VISUAL}}
	]);
snippet cdump "console.log(JSON.stringify(xyz, null, 2))"
	console.log(JSON.stringify(${1:xyz}, null, 2))
snippet swif "switch(true) if statement"
	switch (true) {
		case ${1:a === b}:
			${0:${VISUAL}}
			break;
	}
